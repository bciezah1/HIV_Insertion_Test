# Prepare the gene sets for fgsea
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea
gene_list
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 10, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
str(fgsea_results)
# Convert list columns (e.g., leadingEdge) into strings
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
# Now write the result to a CSV
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count.csv", row.names = FALSE)
# Now write the result to a CSV
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count.csv", row.names = FALSE)
fgsea_results
# Extract the top pathways (e.g., top 10)
topPathways <- fgsea_results[order(pval), ][1:10, ]
# Plot a barplot of the top pathways
library(ggplot2)
ggplot(topPathways, aes(reorder(pathway, NES), NES)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Enriched Pathways", x = "Pathway", y = "Normalized Enrichment Score (NES)") +
theme_minimal()
# Plot enrichment for a specific pathway (e.g., "REACTOME_HIV_INFECTION")
plotEnrichment(pathway = pathways[["REACTOME_HIV_INFECTION"]], stats = gene_list) +
labs(title = "Enrichment of HIV Infection Pathway")
# Save the results as a CSV file
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/output_test.csv", row.names = FALSE)
# Print top pathways
head(fgsea_results[order(padj), ][, c("pathway", "NES", "pval", "padj", "size")])
#NES vs p-value Scatter Plot
ggplot(fgsea_results, aes(x = NES, y = -log10(pval))) +
geom_point(aes(color = padj < 0.05)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "NES vs -log10(p-value)", x = "Normalized Enrichment Score", y = "-log10(p-value)") +
theme_minimal()
#NES vs p-value Scatter Plot
ggplot(fgsea_results, aes(x = NES, y = -log10(pval))) +
geom_point(aes(color = pval < 0.05)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "NES vs -log10(p-value)", x = "Normalized Enrichment Score", y = "-log10(p-value)") +
theme_minimal()
# Select top pathways with padj < 0.05
significant_pathways <- fgsea_results[fgsea_results$pval < 0.1, ]
# Print a table with the top significant pathways
head(significant_pathways[, c("pathway", "NES", "pval", "padj", "size")])
##############
ggplot(fgsea_results, aes(x = size, y = NES)) +
geom_point(aes(color = pval < 0.1)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "Pathway Size vs NES", x = "Pathway Size", y = "Normalized Enrichment Score") +
theme_minimal()
# Select a pathway (e.g., "REACTOME_HIV_INFECTION")
gene_ranks <- gene_list[names(pathways[["REACTOME_INFECTIOUS_DISEASE"]])]
# Plot the ranks
plot(gene_ranks, type = "h", main = "Gene Ranks for HIV Infection Pathway",
xlab = "Gene Rank", ylab = "Ranked Score")
#enrichment heatmap
# Extract top 20 pathways based on padj
library(pheatmap)
top20_pathways <- fgsea_results[order(padj), ][1:20, ]
top20_pathways <- fgsea_results[order(pval), ][1:20, ]
#enrichment heatmap
# Extract top 20 pathways based on padj
library(pheatmap)
top20_pathways <- fgsea_results[order(pval), ][1:20, ]
# Create a heatmap
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_cols = FALSE,
labels_col = top20_pathways$pathway,
main = "NES for Top 20 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100))
top20_pathways
top20_pathways <- fgsea_results[order(pval), ][1:10, ]
top20_pathways
# Create a heatmap
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_cols = FALSE,
labels_col = top20_pathways$pathway,
main = "NES for Top 20 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100))
matrix(top20_pathways$NES
matrix(top20_pathways$NES, nrow = 1)
# reading in data from deseq2
df = read.table("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/a1_table_ranked_by_most_freq.csv", header=TRUE)
head(df)
# we want the log2 fold change
original_gene_list <- df$span_count
# name the vector
names(original_gene_list) <- df$gene
# omit any NA values
gene_list<-na.omit(original_gene_list)
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
gene_list
# Load libraries
library(fgsea)
library(msigdbr)
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME")
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME")
# Prepare the gene sets for fgsea
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea
gene_list
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
str(fgsea_results)
# Convert list columns (e.g., leadingEdge) into strings
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
# Now write the result to a CSV
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count.csv", row.names = FALSE)
# Now write the result to a CSV
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count_C2.csv", row.names = FALSE)
fgsea_results
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C3", subcategory = "CP:REACTOME")
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:KEGG")
# Prepare the gene sets for fgsea
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea
gene_list
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 5, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
str(fgsea_results)
# Check results
fgsea_results
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C3", subcategory = "TFT")
library(msigdbr)
# List all available collections in msigdbr
collections <- msigdbr_collections()
# Filter to see available subcategories for category C3
subset(collections, category_code == "C3")
collections
collections[1:20]
collections$gs_subcat
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C3", subcategory = "TFT:GTRD")
# Prepare the gene sets for fgsea
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea
gene_list
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
str(fgsea_results)
# Convert list columns (e.g., leadingEdge) into strings
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
fgsea_results
# Extract the top pathways (e.g., top 10)
topPathways <- fgsea_results[order(pval), ][1:10, ]
# Plot a barplot of the top pathways
library(ggplot2)
ggplot(topPathways, aes(reorder(pathway, NES), NES)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Enriched Pathways", x = "Pathway", y = "Normalized Enrichment Score (NES)") +
theme_minimal()
fgsea_results[order(pval), ][1:10, ]
# reading in data from deseq2
df = read.table("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/a1_table_ranked_by_most_freq.csv", header=TRUE)
head(df)
# we want the log2 fold change
original_gene_list <- df$span_count
# name the vector
names(original_gene_list) <- df$gene
# omit any NA values
gene_list<-na.omit(original_gene_list)
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
gene_list
# Load libraries
library(fgsea)
library(msigdbr)
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME")
# Prepare the gene sets for fgsea
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea
gene_list
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
str(fgsea_results)
# Convert list columns (e.g., leadingEdge) into strings
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
# Now write the result to a CSV
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count_C2.csv", row.names = FALSE)
fgsea_results
# reading in data from deseq2
df = read.table("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
head(df)
# we want the log2 fold change
original_gene_list <- df$span_count
# name the vector
names(original_gene_list) <- df$gene
# omit any NA values
gene_list<-na.omit(original_gene_list)
# sort the list in decreasing order (required for clusterProfiler)
gene_list = sort(gene_list, decreasing = TRUE)
gene_list
gene_list[1:20]
# Load libraries
library(fgsea)
library(msigdbr)
# Load Reactome pathways from MSigDB (for the human genome)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME")
# Prepare the gene sets for fgsea
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea
gene_list
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check results
fgsea_results
str(fgsea_results)
# Convert list columns (e.g., leadingEdge) into strings
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
# Now write the result to a CSV
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count_C2_60encondes.csv", row.names = FALSE)
fgsea_results
# Extract the top pathways (e.g., top 10)
topPathways <- fgsea_results[order(pval), ][1:10, ]
# Plot a barplot of the top pathways
library(ggplot2)
ggplot(topPathways, aes(reorder(pathway, NES), NES)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Enriched Pathways", x = "Pathway", y = "Normalized Enrichment Score (NES)") +
theme_minimal()
# Plot enrichment for a specific pathway (e.g., "REACTOME_HIV_INFECTION")
plotEnrichment(pathway = pathways[["REACTOME_HIV_INFECTION"]], stats = gene_list) +
labs(title = "Enrichment of HIV Infection Pathway")
# Print top pathways
head(fgsea_results[order(padj), ][, c("pathway", "NES", "pval", "padj", "size")])
#NES vs p-value Scatter Plot
ggplot(fgsea_results, aes(x = NES, y = -log10(pval))) +
geom_point(aes(color = pval < 0.05)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "NES vs -log10(p-value)", x = "Normalized Enrichment Score", y = "-log10(p-value)") +
theme_minimal()
# Select top pathways with padj < 0.05
significant_pathways <- fgsea_results[fgsea_results$pval < 0.1, ]
# Print a table with the top significant pathways
head(significant_pathways[, c("pathway", "NES", "pval", "padj", "size")])
##############
ggplot(fgsea_results, aes(x = size, y = NES)) +
geom_point(aes(color = pval < 0.1)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "Pathway Size vs NES", x = "Pathway Size", y = "Normalized Enrichment Score") +
theme_minimal()
# Select a pathway (e.g., "REACTOME_HIV_INFECTION")
gene_ranks <- gene_list[names(pathways[["REACTOME_INFECTIOUS_DISEASE"]])]
# Plot the ranks
plot(gene_ranks, type = "h", main = "Gene Ranks for HIV Infection Pathway",
xlab = "Gene Rank", ylab = "Ranked Score")
#enrichment heatmap
# Extract top 20 pathways based on padj
library(pheatmap)
top20_pathways <- fgsea_results[order(pval), ][1:10, ]
top20_pathways
# Create a heatmap
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_cols = FALSE,
labels_col = top20_pathways$pathway,
main = "NES for Top 20 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100))
# Load necessary libraries
library(fgsea)
library(msigdbr)
library(ggplot2)
library(pheatmap)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("./data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table(",/HIV_Insertion_Test/data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("./HIV_Insertion_Test/data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("./data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("./a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
head(df)  # Preview the first few rows of the data
# Extract the span_count column (log2 fold change) to use as ranking values for GSEA
original_gene_list <- df$span_count
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("../../data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("./../../data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/a1_table_ranked_by_most_freq_using60ENCONDES.csv", header=TRUE)
head(df)  # Preview the first few rows of the data
# Extract the span_count column (log2 fold change) to use as ranking values for GSEA
original_gene_list <- df$span_count
# Assign gene names to the ranking vector
names(original_gene_list) <- df$gene
# Remove any NA values from the gene list
gene_list <- na.omit(original_gene_list)
# Sort the gene list in decreasing order (required for GSEA)
gene_list <- sort(gene_list, decreasing = TRUE)
gene_list[1:20]  # Preview the top 20 genes
# Extract the span_count column (log2 fold change) to use as ranking values for GSEA
original_gene_list <- df$gene_freq
# Assign gene names to the ranking vector
names(original_gene_list) <- df$gene
# Remove any NA values from the gene list
gene_list <- na.omit(original_gene_list)
# Sort the gene list in decreasing order (required for GSEA)
gene_list <- sort(gene_list, decreasing = TRUE)
gene_list[1:20]  # Preview the top 20 genes
# Load Reactome pathways for Homo sapiens from MSigDB (subcategory: CP:REACTOME)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME")
# Prepare the pathways for fgsea by splitting the data by gene set name (gs_name)
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea on the gene list, with specified pathway size and permutations
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check the structure of the fgsea results
str(fgsea_results)
# Convert the leadingEdge column (which is a list) to a single string for easier readability
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
# Save the fgsea results to a CSV file for future use
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/data/gsea_results_span_count_C2_60encondes.csv", row.names = FALSE)
# Save the fgsea results to a CSV file for future use
write.csv(fgsea_results, "C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/output/gsea_results_most_freq_genes_C2_60encondes.csv", row.names = FALSE)
# Extract the top 10 pathways based on p-values
topPathways <- fgsea_results[order(fgsea_results$pval), ][1:10, ]
# Plot a barplot showing the top 10 enriched pathways by their Normalized Enrichment Score (NES)
ggplot(topPathways, aes(reorder(pathway, NES), NES)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = "Top 10 Enriched Pathways", x = "Pathway", y = "Normalized Enrichment Score (NES)") +
theme_minimal()
# Plot enrichment for a specific pathway (e.g., "REACTOME_HIV_INFECTION")
plotEnrichment(pathway = pathways[["REACTOME_HIV_INFECTION"]], stats = gene_list) +
labs(title = "Enrichment of HIV Infection Pathway")
# Display the top pathways sorted by adjusted p-value (padj)
head(fgsea_results[order(fgsea_results$padj), ][, c("pathway", "NES", "pval", "padj", "size")])
# Scatter plot: NES vs -log10(p-value) with color-coded significance
ggplot(fgsea_results, aes(x = NES, y = -log10(pval))) +
geom_point(aes(color = pval < 0.05)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "NES vs -log10(p-value)", x = "Normalized Enrichment Score", y = "-log10(p-value)") +
theme_minimal()
# Plot Pathway Size vs NES, color-coding based on p-value significance
ggplot(fgsea_results, aes(x = size, y = NES)) +
geom_point(aes(color = pval < 0.05)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "Pathway Size vs NES", x = "Pathway Size", y = "Normalized Enrichment Score") +
theme_minimal()
# Select the "REACTOME_INFECTIOUS_DISEASE" pathway and extract gene ranks for visualization
gene_ranks <- gene_list[names(pathways[["REACTOME_INFECTIOUS_DISEASE"]])]
gene_ranks
# Display the top pathways sorted by adjusted p-value (padj)
head(fgsea_results[order(fgsea_results$padj), ][, c("pathway", "NES", "pval", "padj", "size")])
# Display the top pathways sorted by adjusted p-value (padj)
head(fgsea_results[order(fgsea_results$padj), ][, c("pathway", "NES", "pval", "padj", "size")],10)
# Select the "REACTOME_INFECTIOUS_DISEASE" pathway and extract gene ranks for visualization
gene_ranks <- gene_list[names(pathways[["REACTOME_INFECTIOUS_DISEASE"]])]
gene_ranks
# Select the "REACTOME_INFECTIOUS_DISEASE" pathway and extract gene ranks for visualization
gene_ranks <- gene_list[names(pathways[["REACTOME_APOPTOSIS"]])]
gene_ranks
names(pathways)
pathways[["REACTOME_APOPTOSIS"]]
gene_list
intersect(names(gene_list), pathways[["REACTOME_APOPTOSIS"]])
# Select the "REACTOME_INFECTIOUS_DISEASE" pathway and extract gene ranks for visualization
# Select the "REACTOME_INFECTIOUS_DISEASE" pathway and extract gene ranks for visualization
infectious_disease_genes <- pathways[["REACTOME_INFECTIOUS_DISEASE"]]
# Extract gene ranks from your gene list
gene_ranks <- gene_list[names(gene_list) %in% infectious_disease_genes]
# Display the ranked genes
gene_ranks
# Plot the ranked gene scores for the pathway
plot(gene_ranks, type = "h", main = "Gene Ranks for HIV Infection Pathway",
xlab = "Gene Rank", ylab = "Ranked Score")
# Plot Pathway Size vs NES, color-coding based on p-value significance
ggplot(fgsea_results, aes(x = size, y = NES)) +
geom_point(aes(color = pval < 0.05)) +
scale_color_manual(values = c("gray", "red")) +
labs(title = "Pathway Size vs NES", x = "Pathway Size", y = "Normalized Enrichment Score") +
theme_minimal()
# Select the "REACTOME_INFECTIOUS_DISEASE" pathway and extract gene ranks for visualization
infectious_disease_genes <- pathways[["REACTOME_INFECTIOUS_DISEASE"]]
# Extract gene ranks from your gene list
gene_ranks <- gene_list[names(gene_list) %in% infectious_disease_genes]
# Display the ranked genes
gene_ranks
# Plot the ranked gene scores for the pathway
plot(gene_ranks, type = "h", main = "Gene Ranks for HIV Infection Pathway",
xlab = "Gene Rank", ylab = "Ranked Score")
# Extract the top 10 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:10, ]
# Create a heatmap of the NES (Normalized Enrichment Score) for the top 10 pathways
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_cols = FALSE,
labels_col = top20_pathways$pathway,
main = "NES for Top 10 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100))
# Extract the top 10 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:50, ]
# Create a heatmap of the NES (Normalized Enrichment Score) for the top 10 pathways
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_cols = FALSE,
labels_col = top20_pathways$pathway,
main = "NES for Top 10 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100))
top20_pathways
# Extract the top 10 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:50, ]
# Create a heatmap of the NES (Normalized Enrichment Score) for the top 10 pathways
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_cols = FALSE,
labels_col = top20_pathways$pathway,
main = "NES for Top 10 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100))
# Extract the top 20 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:20, ]
# Create a heatmap of the NES (Normalized Enrichment Score) for the top 20 pathways
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_rows = FALSE, # Disable row clustering since it's a single row
cluster_cols = FALSE, # Disable column clustering
labels_col = top20_pathways$pathway,
main = "NES for Top 20 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100),
angle_col = 45) # Rotate column names for better readability
top20_pathways$NES
# Extract the top 20 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:, ]
# Extract the top 20 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:100, ]
# Create a heatmap of the NES (Normalized Enrichment Score) for the top 20 pathways
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_rows = FALSE, # Disable row clustering since it's a single row
cluster_cols = FALSE, # Disable column clustering
labels_col = top20_pathways$pathway,
main = "NES for Top 20 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100),
angle_col = 45) # Rotate column names for better readability
# Extract the top 20 pathways for visualization (based on p-values)
top20_pathways <- fgsea_results[order(fgsea_results$pval), ][1:20, ]
# Create a heatmap of the NES (Normalized Enrichment Score) for the top 20 pathways
pheatmap(matrix(top20_pathways$NES, nrow = 1),
cluster_rows = FALSE, # Disable row clustering since it's a single row
cluster_cols = FALSE, # Disable column clustering
labels_col = top20_pathways$pathway,
main = "NES for Top 20 Enriched Pathways",
color = colorRampPalette(c("blue", "white", "red"))(100),
angle_col = 45) # Rotate column names for better readability
# Load necessary libraries
library(fgsea)
library(msigdbr)
library(ggplot2)
library(pheatmap)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/output/table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE)
pwd
ls
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("./../../output/table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE)
##############################################
#
##############################################
# Set the working directory to your desired path
setwd("C:/Users/bciez/Documents/Basilio/UCSF/HIV_Insertion_Test/output")
# Verify the current working directory
getwd()
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE,sep = '\t')
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE)
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE)
head(df)  # Preview the first few rows of the data
# Read the input data from the DESeq2 output (gene list ranked by frequency)
df <- read.table("table_ranked_by_the_most_frequently_observed_gene_in_the_highest_number_of_patient_samples.txt", header=TRUE)
head(df)  # Preview the first few rows of the data
# Extract the span_count column (log2 fold change) to use as ranking values for GSEA
original_gene_list <- df$Npart
# Assign gene names to the ranking vector
names(original_gene_list) <- df$gene
# Remove any NA values from the gene list
gene_list <- na.omit(original_gene_list)
# Sort the gene list in decreasing order (required for GSEA)
gene_list <- sort(gene_list, decreasing = TRUE)
gene_list[1:20]  # Preview the top 20 genes
# Load Reactome pathways for Homo sapiens from MSigDB (subcategory: CP:REACTOME)
msigdbr_genesets <- msigdbr(species = "Homo sapiens", category = "C2", subcategory = "CP:REACTOME")
# Prepare the pathways for fgsea by splitting the data by gene set name (gs_name)
pathways <- split(msigdbr_genesets$gene_symbol, msigdbr_genesets$gs_name)
# Run fgsea on the gene list, with specified pathway size and permutations
fgsea_results <- fgsea(pathways = pathways, stats = gene_list, minSize = 15, maxSize = 500, nperm = 10000)
# Check the structure of the fgsea results
str(fgsea_results)
# Convert the leadingEdge column (which is a list) to a single string for easier readability
fgsea_results$leadingEdge <- sapply(fgsea_results$leadingEdge, function(x) paste(x, collapse = ";"))
# Save the fgsea results to a CSV file for future use
write.csv(fgsea_results, "GSEA_MostFreqGenes_C2_60encondes_09_23_2024.csv", row.names = FALSE)
# Save the fgsea results to a CSV file for future use
write.table(fgsea_results, "GSEA_MostFreqGenes_C2_60encondes_09_23_2024.txt", row.names = FALSE)
